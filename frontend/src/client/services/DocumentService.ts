// This file is autogenerated, do not edit directly.

import {getApiBase, api} from '../defaults'

import {Document} from '../schemas/Document'
import {Body_create_doc_document__post} from '../schemas/Body_create_doc_document__post'
import {DocumentWithRecordsCount} from '../schemas/DocumentWithRecordsCount'
import {StatusMessage} from '../schemas/StatusMessage'
import {DocumentRecord} from '../schemas/DocumentRecord'
import {MemorySubstitution} from '../schemas/MemorySubstitution'
import {DocumentRecordUpdate} from '../schemas/DocumentRecordUpdate'
import {DocumentProcessingSettings} from '../schemas/DocumentProcessingSettings'

export const getDocs = async (): Promise<Document[]> => {
  return await api.get<Document[]>(`/document/`)
}
export const createDoc = async (data: Body_create_doc_document__post): Promise<Document> => {
  const formData = new FormData()
  formData.append('file', data.file)
  return await api.post<Document>(`/document/`, formData)
}
export const getDoc = async (doc_id: number): Promise<DocumentWithRecordsCount> => {
  return await api.get<DocumentWithRecordsCount>(`/document/${doc_id}`)
}
export const deleteDoc = async (doc_id: number): Promise<StatusMessage> => {
  return await api.delete<StatusMessage>(`/document/${doc_id}`)
}
export const getDocRecords = async (doc_id: number, page?: number | null): Promise<DocumentRecord[]> => {
  return await api.get<DocumentRecord[]>(`/document/${doc_id}/records`, {query: {page}})
}
export const getSegmentSubstitutions = async (doc_id: number, segment_id: number): Promise<MemorySubstitution[]> => {
  return await api.get<MemorySubstitution[]>(`/document/${doc_id}/segments/${segment_id}/substitutions`)
}
export const updateDocRecord = async (doc_id: number, record_id: number, content: DocumentRecordUpdate): Promise<StatusMessage> => {
  return await api.put<StatusMessage>(`/document/${doc_id}/record/${record_id}`, content)
}
export const processDoc = async (doc_id: number, content: DocumentProcessingSettings): Promise<StatusMessage> => {
  return await api.post<StatusMessage>(`/document/${doc_id}/process`, content)
}
export const getDownloadDocLink = (doc_id: number): string => {
  return getApiBase() + `/document/${doc_id}/download`
}
