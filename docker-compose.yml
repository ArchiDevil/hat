services:
  db:
    image: postgres:16.6-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
      start_interval: 5s

  db-admin:
    image: dpage/pgadmin4:8.14
    environment:
      # these credentials are public since this service is not exposed to public
      # and used only for debugging purposes
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_DISABLE_POSTFIX=True
    ports:
      - "8082:80"
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - debug
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

  worker:
    build:
      dockerfile: worker.Dockerfile
      context: .
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
        restart: true
    stop_signal: SIGINT

  backend:
    build:
      dockerfile: backend.Dockerfile
      context: .
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - DOMAIN_NAME=${DOMAIN_NAME}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
        restart: true
      worker:
        condition: service_started

  proxy:
    build:
      dockerfile: proxy.Dockerfile
      context: .
    ports:
      - 6916:6916
    depends_on:
      - backend
    restart: on-failure

volumes:
  db:
    driver: local

configs:
  pgpass:
    content: db:5432:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "PostgresDB",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "${POSTGRES_DB}",
        "Username": "${POSTGRES_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}
